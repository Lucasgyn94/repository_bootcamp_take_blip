{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\DigitalOne\\\\19-Introdu\\xE7\\xE3o ao ReactJS\\\\lifecycle\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  /* Props, é uma abreviação de properties, ou propriedades, \r\n  são informações que podem ser passadas para um componente. \r\n  Pode ser uma string, um número, até mesmo uma função. \r\n  Este valor pode então ser utilizado pelo componente que a recebe.\r\n  */\n  constructor(props) {\n    super(props);\n    this.state = {\n      clock: 1000,\n      copo: 'água'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: clock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.alterarCopo(),\n        children: [\" \", copo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/DigitalOne/19-Introdução ao ReactJS/lifecycle/src/index.js"],"names":["React","ReactDOM","render","App","Component","constructor","props","state","clock","copo","alterarCopo","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,aAAP;;;AAEA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAExB;AACJ;AACA;AACA;AACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAEDP,EAAAA,MAAM,GAAI;AAIN,wBACI;AAAA,8BACI;AAAA,kBAAKM;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKE,WAAL,EAAvB;AAAA,wBAA6CD,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA3BuB;;AAgC5B,MAAME,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAZ,QAAQ,CAACC,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBS,WAAzB","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { render } from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nclass App extends Component {\r\n\r\n    /* Props, é uma abreviação de properties, ou propriedades, \r\n    são informações que podem ser passadas para um componente. \r\n    Pode ser uma string, um número, até mesmo uma função. \r\n    Este valor pode então ser utilizado pelo componente que a recebe.\r\n    */\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            clock: 1000,\r\n            copo: 'água'\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <h1>{clock}</h1>\r\n                <button onClick={() => this.alterarCopo()}> {copo}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\")\r\nReactDOM.render(<App />, rootElement)"]},"metadata":{},"sourceType":"module"}