{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\DigitalOne\\\\19-Introdu\\xE7\\xE3o ao ReactJS\\\\lifecycle\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  /* Props, é uma abreviação de properties, ou propriedades, \r\n  são informações que podem ser passadas para um componente. \r\n  Pode ser uma string, um número, até mesmo uma função. \r\n  Este valor pode então ser utilizado pelo componente que a recebe.\r\n  */\n  constructor(props) {\n    super(props);\n\n    this.alterarCopo = () => {\n      // set = definir. Ele permiti armazenar valores únicos de qualquer tipo desde valores primitivos  a referência em objetos;\n      this.setState({\n        copo: 'refrigerante'\n      });\n    };\n\n    this.state = {\n      clock: 1000,\n      copo: 'água'\n    };\n  } //componentDiMount() Chamado imediatamente após a montagem de um componente. Definir o estado aqui irá desencadear uma nova renderização.\n\n\n  componentDidMount() {\n    // setTimeout() = definir o tempo limite\n    window.setTimeout(() => {\n      this.setState({\n        copo: 'suco'\n      });\n    }, 3000);\n  }\n\n  render() {\n    const {\n      clock,\n      copo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: clock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.alterarCopo(),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: copo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/DigitalOne/19-Introdução ao ReactJS/lifecycle/src/index.js"],"names":["React","Component","ReactDOM","App","constructor","props","alterarCopo","setState","copo","state","clock","componentDidMount","window","setTimeout","render","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAExB;AACJ;AACA;AACA;AACA;AAEEG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBC,WArBmB,GAqBL,MAAM;AAClB;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KA1BkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXF,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID,GAfyB,CAiB5B;;;AAEEG,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtB,WAAKN,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAJD,EAIG,IAJH;AAMD;;AASDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,KAAF;AAASF,MAAAA;AAAT,QAAkB,KAAKC,KAA7B;AACA,wBACE;AAAA,8BACE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKJ,WAAL,EAAvB;AAAA,+BAA2C;AAAA,oBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA5CyB;;AA+C5B,MAAMO,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAf,QAAQ,CAACY,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,WAAzB","sourcesContent":["import React, { Component } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\n\r\nclass App extends Component {\r\n\r\n    /* Props, é uma abreviação de properties, ou propriedades, \r\n    são informações que podem ser passadas para um componente. \r\n    Pode ser uma string, um número, até mesmo uma função. \r\n    Este valor pode então ser utilizado pelo componente que a recebe.\r\n    */\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      clock: 1000,\r\n      copo: 'água'\r\n    }\r\n  }\r\n\r\n//componentDiMount() Chamado imediatamente após a montagem de um componente. Definir o estado aqui irá desencadear uma nova renderização.\r\n\r\n  componentDidMount() {\r\n    // setTimeout() = definir o tempo limite\r\n    window.setTimeout(() => {\r\n      this.setState({\r\n        copo: 'suco'\r\n      })\r\n    }, 3000)\r\n\r\n  }\r\n\r\n  alterarCopo = () => {\r\n    // set = definir. Ele permiti armazenar valores únicos de qualquer tipo desde valores primitivos  a referência em objetos;\r\n    this.setState({\r\n      copo: 'refrigerante'\r\n    })\r\n  } \r\n\r\n  render() {\r\n    const { clock, copo } = this.state\r\n    return (\r\n      <div>\r\n        <h1>{clock}</h1>\r\n        <button onClick={() => this.alterarCopo()}><h1>{copo}</h1></button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\")\r\nReactDOM.render(<App />, rootElement)"]},"metadata":{},"sourceType":"module"}